<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">

<beans>

	<!--  set of operators considered for tests -->

	<bean id="operators"
		class="com.mutation.transform.TransitionGroupConfig">
		<property name="transitionGroups">
			<list>
				<bean
					class="com.mutation.transform.asm.ror.ROR_TransitionGroup">
					<constructor-arg>
						<value>true</value>
					</constructor-arg>
				</bean>
			</list>
		</property>
	</bean>

	<!-- the driver main class which constructs a proper mutation runner -->
	<bean id="testDriver" class="com.mutation.BasicDriver">
		<property name="resolver" ref="usedResolver" />
		<property name="runner" ref="runner" />
		<property name="eventListener" ref="eventListener"></property>
	</bean>

	<!-- the core mutation runner class which executes the tests -->
	<bean id="runner" class="com.mutation.runner.MutationRunner">
		<property name="testRunner" ref="testRunner" />
		<property name="eventListener" ref="eventListener" />
		<property name="mutantGenerator" ref="mutantGenerator" />
		<property name="classesUnderTestPath" ref="classesDir" />
	</bean>

	<bean id="file.eventListener"
		class="com.mutation.runner.events.listener.FileEventListener">
		<constructor-arg>
			<ref bean="report.filename" />
		</constructor-arg>
	</bean>

	<bean id="report.eventListener"
		class="com.mutation.runner.events.listener.ReportEventListener"
		destroy-method="destroy">
		<constructor-arg>
			<ref bean="report.filename" />
		</constructor-arg>
	</bean>

	<bean id="eventListener"
		class="com.mutation.runner.events.listener.CompositeEventListener">
		<property name="listeners">
			<list>
				<bean
					class="com.mutation.runner.events.listener.ConsoleEventListener">
					<property name="showSummaryOnly" value="false" />
				</bean>
				<ref bean="report.eventListener" />
			</list>
		</property>
	</bean>

	<bean id="testRunner"
		class="com.mutation.testrunner.junit3.JUnitRunner">
		<property name="stopOnFirstFailedTest" value="true" />
		<property name="testClassesLocationsAsFiles">
			<list>
				<ref bean="classesDir" />
				<ref bean="testClassesDir" />
			</list>
		</property>
		<property name="libraries" ref="libraries" />
	</bean>

	<bean id="classMatchResolver"
		class="com.mutation.resolver.ClassMatchResolver">
		<property name="filterConfiguration" ref="filterConfig" />
		<property name="classesPath" ref="classesDir" />
		<property name="testClassesPath" ref="testClassesDir" />
	</bean>

	<bean id="bruteForceResolver"
		class="com.mutation.resolver.BruteForceResolver">
		<property name="filterConfiguration" ref="filterConfig" />
		<property name="classesPath" ref="classesDir" />
		<property name="testClassesPath" ref="testClassesDir" />
	</bean>

	<bean id="annotationResolver"
		class="com.mutation.resolver.AnnotationResolver">
		<property name="filterConfiguration" ref="filterConfig" />
		<property name="classesPath" ref="classesDir" />
		<property name="testClassesPath" ref="testClassesDir" />
	</bean>

	<bean id="configurationBasedResolver"
		class="com.mutation.resolver.ConfigBasedResolver">
		<property name="filterConfiguration" ref="filterConfig" />
		<property name="classesPath" ref="classesDir" />
		<property name="testClassesPath" ref="testClassesDir" />
		<property name="configurationFile" ref="assignmentFile" />
	</bean>

	<bean id="filterConfig"
		class="com.mutation.resolver.util.FilterConfiguration">
		<property name="classIncludeFilter" ref="classIncludeFilter" />
		<property name="testClassIncludeFilter"
			ref="testClassIncludeFilter" />
		<property name="classExcludeFilter" ref="classExcludeFilter" />
		<property name="testClassExcludeFilter"
			ref="testClassExcludeFilter" />
	</bean>

	<bean id="testClassIncludeFilter"
		class="com.mutation.resolver.util.IncludeFilter">
		<property name="includePattern">
			<value>(.*)</value>
		</property>
	</bean>

	<bean id="classIncludeFilter"
		class="com.mutation.resolver.util.IncludeFilter">
		<property name="includePattern">
			<value>(.*)</value>
		</property>
	</bean>

	<bean id="testClassExcludeFilter"
		class="com.mutation.resolver.util.ExcludeFilter">
		<property name="excludePattern">
			<value></value>
		</property>
	</bean>

	<bean id="classExcludeFilter"
		class="com.mutation.resolver.util.ExcludeFilter">
		<property name="excludePattern">
			<value></value>
		</property>
	</bean>

	<bean id="mutantGenerator"
		class="com.mutation.transform.MutantGenerator">
	</bean>

	<bean id="dummyMutantGenerator"
		class="com.mutation.transform.DummyMutantGenerator">
	</bean>

</beans>