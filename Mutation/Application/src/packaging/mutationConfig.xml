<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">

<beans>


	<bean id="usedResolver" parent="configurationBasedResolver"></bean>

	<bean id="classesDir" class="java.io.File">
		<constructor-arg value="./src/test/it/it0006/target/classes/" />
	</bean>

	<bean id="testClassesDir" class="java.io.File">
		<constructor-arg
			value="./src/test/it/it0006/target/test-classes/" />
	</bean>

	<bean id="sourceDir" class="java.io.File">
		<constructor-arg value="./src/main" />
	</bean>

	<bean id="assignmentFile" class="java.io.File">
		<constructor-arg value="./src/test/it/it0006/assignment.txt" />
	</bean>

	<bean id="testCaseSuffix" class="java.lang.String">
		<constructor-arg value="Test" />
	</bean>

	<bean id="report.filename" class="java.lang.String">
		<constructor-arg value="target/report.xml" />
	</bean>

	<bean id="report.reportSurvivorsOnly" class="java.lang.Boolean">
		<constructor-arg value="true" />
	</bean>

	<util:list id="libraries">
	</util:list>

		
	<!-- the driver main class which constructs a proper mutation runner -->
	<bean id="testDriver"
		class="com.retroduction.carma.core.Core">
		<property name="testRunner" ref="testRunner" />
		<property name="eventListener" ref="eventListener" />
		<property name="mutantGenerator" ref="mutantGenerator" />
		<property name="classesUnderTestPath" ref="classesDir" />
		<property name="resolver" ref="resolver" />
		<property name="transitionGroupConfig" ref="operators" />
	</bean>

	<bean id="resolver"
		class="com.retroduction.carma.resolvers.Resolver">
		<property name="filterVerifier" ref="filterVerifier" />
		<property name="instantiationVerifier" ref="testCaseInstantiationVerifier" />
		<property name="nestedResolver" ref="nestedResolver" />
		<property name="classesPath" ref="classesDir" />
		<property name="testClassesPath" ref="testClassesDir" />
		<property name="eventListener" ref="eventListener" />
	</bean>
	
	<bean id="filterVerifier"
		class="com.retroduction.carma.resolvers.util.FilterVerifier">
		<property name="filterConfiguration" ref="filterConfiguration" />
	</bean>

	<bean id="testCaseInstantiationVerifier"
		class="com.retroduction.carma.resolvers.util.TestCaseInstantiationVerifier">
		<property name="classPath" ref="classesDir" />
		<property name="testClassPath" ref="testClassesDir" />
	</bean>
<!-- 
	<bean id="classMatchResolver"
		class="com.retroduction.carma.application.resolver.ClassMatchResolver">
		<property name="classesPath" ref="classesDir" />
		<property name="testClassesPath" ref="testClassesDir" />
	</bean>

	<bean id="bruteForceResolver"
		class="com.retroduction.carma.application.resolver.BruteForceResolver">
		<property name="classesPath" ref="classesDir" />
		<property name="testClassesPath" ref="testClassesDir" />
	</bean>

	<bean id="annotationResolver"
		class="com.retroduction.carma.application.resolver.AnnotationResolver">
		<property name="classesPath" ref="classesDir" />
		<property name="testClassesPath" ref="testClassesDir" />
	</bean>

	<bean id="configurationBasedResolver"
		class="com.retroduction.carma.application.resolver.ConfigBasedResolver">
		<property name="classesPath" ref="classesDir" />
		<property name="testClassesPath" ref="testClassesDir" />
		<property name="configurationFile" ref="assignmentFile" />
	</bean>


-->

	<bean id="filterConfiguration"
		class="com.retroduction.carma.resolvers.util.FilterConfiguration">
		<property name="includeFilter" ref="includeFilter" />
		<property name="excludeFilter" ref="excludeFilter" />
	</bean>

	<bean id="includeFilter"
		class="com.retroduction.carma.resolvers.util.IncludeFilter">
		<property name="includePattern">
			<value>(.*)</value>
		</property>
	</bean>

	<bean id="excludeFilter"
		class="com.retroduction.carma.resolvers.util.ExcludeFilter">
		<property name="excludePattern">
			<value></value>
		</property>
	</bean>
	
		<!--  set of operators considered for tests -->

	<bean id="operators"
		class="com.retroduction.carma.core.api.transitions.om.TransitionGroupConfig">
		<property name="transitionGroups">
			<list>
				<bean
					class="com.retroduction.carma.transformer.asm.ror.ROR_TransitionGroup">
					<constructor-arg>
						<value>true</value>
					</constructor-arg>
				</bean>
			</list>
		</property>
	</bean>
	
	
	<bean id="testRunner"
		class="com.retroduction.carma.testrunners.junit3.JUnitRunner">
		<property name="stopOnFirstFailedTest" value="true" />
		<property name="classesLocationsAsFiles" ref="classesDir" />
		<property name="testClassesLocationsAsFiles"
			ref="testClassesDir" />
		<property name="libraries" ref="libraries" />
	</bean>

	<bean id="mutantGenerator"
		class="com.retroduction.carma.core.MutantGenerator">
	</bean>
	
	<bean id="report.eventListener"
		class="com.retroduction.carma.eventlisteners.ReportEventListener">
		<constructor-arg>
			<ref bean="report.filename" />
		</constructor-arg>
	</bean>

	<bean id="eventListener"
		class="com.retroduction.carma.eventlisteners.CompositeEventListener">
		<property name="listeners">
			<list>
				<bean
					class="com.retroduction.carma.eventlisteners.ConsoleEventListener">
					<property name="showSummaryOnly" value="false" />
				</bean>
				<ref bean="report.eventListener" />
			</list>
		</property>
	</bean>
 
</beans>