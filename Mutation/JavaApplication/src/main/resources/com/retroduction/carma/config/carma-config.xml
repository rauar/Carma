<?xml version="1.0" encoding="UTF-8"?>

<beans default-lazy-init="true" xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">


	<bean id="libraries.factoryBean"
		class="com.retroduction.carma.config.LibrariesFactoryBean">
		<property name="dependenciesAsCsvFileNames"
			value="${project.libraries.csv}">
		</property>
	</bean>


	<!-- TODO move these beans to Carma Application specific configuration -->
	<bean id="classesDir.csvFactory" class="com.retroduction.carma.config.CSVFileListFactoryBean">
		<property name="csvNamesList" value="${project.classesdir}" />
	</bean>

	<bean id="testClassesDir.csvFactory" class="com.retroduction.carma.config.CSVFileListFactoryBean">
		<property name="csvNamesList" value="${project.testclassesdir}" />
	</bean>

<!-- 
	<bean id="classesDir" class="java.io.File">
		<constructor-arg value="${project.classesdir}" />
	</bean>

	<bean id="testClassesDir" class="java.io.File">
		<constructor-arg value="${project.testclassesdir}" />
	</bean>
 -->

	<!-- the driver main class which constructs a proper mutation runner -->
	<bean id="testDriver" class="com.retroduction.carma.core.Core">
		<property name="testRunner" ref="testRunner" />
		<property name="eventListener" ref="eventListener" />
		<property name="mutantGenerator" ref="mutantGenerator" />
		<property name="classesUnderTestPath" ref="${project.classesdir.source}" />
		<property name="resolver" ref="resolver" />
		<property name="transitionGroupConfig" ref="operators" />
	</bean>

	<bean id="resolver"
		class="com.retroduction.carma.resolvers.Resolver">
		<property name="filterVerifier" ref="filterVerifier" />
		<property name="instantiationVerifier"
			ref="testCaseInstantiationVerifier" />
		<property name="nestedResolver" ref="${resolver.name}" />
		<property name="classesPath" ref="${project.classesdir.source}" />
		<property name="testClassesPath" ref="${project.testclassesdir.source}" />
		<property name="eventListener" ref="eventListener" />
	</bean>

	<bean id="filterVerifier"
		class="com.retroduction.carma.resolvers.util.FilterVerifier">
		<property name="filterConfiguration" ref="filterConfiguration" />
	</bean>

	<bean id="testCaseInstantiationVerifier"
		class="com.retroduction.carma.resolvers.util.TestCaseInstantiationVerifier">
		<property name="classPath" ref="${project.classesdir.source}" />
		<property name="testClassPath" ref="${project.testclassesdir.source}" />
	</bean>

	<bean id="resolver.configbased"
		class="com.retroduction.carma.resolvers.ConfigBasedResolver">
		<property name="classesPath" ref="${project.classesdir.source}" />
		<property name="testClassesPath" ref="${project.testclassesdir.source}" />
		<property name="configurationFile"
			value="${resolver.configbased.assignmentfile}" />
	</bean>

	<bean id="resolver.classmatch"
		class="com.retroduction.carma.resolvers.ClassMatchResolver">
		<property name="classesPath" ref="${project.classesdir.source}" />
		<property name="testClassesPath" ref="${project.testclassesdir.source}" />
		<property name="testNameSuffix"
			value="${resolver.classmatch.testNameSuffix}" />
	</bean>

	<bean id="resolver.bruteforce"
		class="com.retroduction.carma.resolvers.BruteForceResolver">
		<property name="classesPath" ref="${project.classesdir.source}" />
		<property name="testClassesPath" ref="${project.testclassesdir.source}" />
	</bean>

	<bean id="resolver.annotationbased"
		class="com.retroduction.carma.resolvers.AnnotationResolver">
		<property name="classesPath" ref="${project.classesdir.source}" />
		<property name="testClassesPath" ref="${project.testclassesdir.source}" />
	</bean>


	<bean id="filterConfiguration"
		class="com.retroduction.carma.resolvers.util.FilterConfiguration">
		<property name="includeFilter" ref="includeFilter" />
		<property name="excludeFilter" ref="excludeFilter" />
	</bean>

	<bean id="includeFilter"
		class="com.retroduction.carma.resolvers.util.IncludeFilter">
		<property name="includePattern">
			<value>${resolver.includePattern}</value>
		</property>
	</bean>

	<bean id="excludeFilter"
		class="com.retroduction.carma.resolvers.util.ExcludeFilter">
		<property name="excludePattern">
			<value>${resolver.excludePattern}</value>
		</property>
	</bean>

	<!--  set of operators considered for tests -->

	<bean id="operators"
		class="com.retroduction.carma.core.api.transitions.om.TransitionGroupConfig">
		<property name="transitionGroups">
			<list>
				<bean
					class="com.retroduction.carma.transformer.asm.ror.ROR_TransitionGroup">
					<constructor-arg>
						<value>true</value>
					</constructor-arg>
				</bean>
			</list>
		</property>
	</bean>


	<bean id="testRunner"
		class="com.retroduction.carma.testrunners.junit3.JUnitRunner">
		<property name="stopOnFirstFailedTest" value="true" />
		<property name="classesLocationsAsFiles" ref="${project.classesdir.source}" />
		<property name="testClassesLocationsAsFiles"
			ref="${project.testclassesdir.source}" />
		<property name="libraries" ref="${project.libraries.source}" />
	</bean>

	<bean id="mutantGenerator"
		class="com.retroduction.carma.core.MutantGenerator" />


	<bean id="report.eventListener"
		class="com.retroduction.carma.eventlisteners.ReportEventListener">
		<constructor-arg>
			<value>${report.filename}</value>

		</constructor-arg>
	</bean>

	<bean id="eventListener"
		class="com.retroduction.carma.eventlisteners.CompositeEventListener">
		<property name="listeners">
			<list>
				<bean
					class="com.retroduction.carma.eventlisteners.ConsoleEventListener">
					<property name="showSummaryOnly" value="false" />
				</bean>
				<ref bean="report.eventListener" />
			</list>
		</property>
	</bean>

</beans>